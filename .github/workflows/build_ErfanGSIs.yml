name: build_ErfanGSIs

on:
#  release:
#    types: [published]
#  push:
#    branches:
#      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]
    
env:
  ROM_URL: https://get.derpfest.org/raphael/builds/DerpFest-10-Official-raphael-20201009.zip
  ROM_NAME: Generic
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
       - name: Checkout
         uses: actions/checkout@master
       
       - name: Clean Up
         run: |
           docker rmi `docker images -q`
           sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
           sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
           sudo -E apt-get update
           sudo -E apt-get -y autoremove --purge
           sudo -E apt-get clean 
           
       - name: Initialization environment
         run: |
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install git openjdk-8-jdk wget
       
       - name: Clone ErfanGSI Source Code
         run: git clone --recurse-submodules https://github.com/maimaiguanfan/ErfanGSIs.git
       
       - name: Setting up ErfanGSI requirements
         run: |
              sudo chmod -R 777 ErfanGSIs
              cd ErfanGSIs
              sudo bash setup.sh
       
       - name: Download Stock Rom & Generate GSI
         run: sudo ./ErfanGSIs/url2GSI.sh $ROM_URL $ROM_NAME -ab
       
       - name: Zip GSI  
         run: |
              mkdir final
              zip -r final/GSI.zip /home/runner/work/actions_build_ErfanGSIs/actions_build_ErfanGSIs/ErfanGSIs/output/

       - name: Create Release
         id: create_release
         uses: actions/create-release@v1
         env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # This token is provided by Actions, you do not need to create your own token
         with:
          tag_name: ${{ ROM_NAME }}
          release_name: Release ${{ ROM_NAME }}
          draft: false
          prerelease: false
       
       - name: Update release
         uses: johnwbyrd/update-release@v1.0.0
         with:
          token: ${{ secrets.ACCESS_TOKEN }}
          tag_name: ${{ ROM_NAME }}
          release_name: Release ${{ ROM_NAME }}
          files: final/GSI.zip
          prerelease: false
         
            
